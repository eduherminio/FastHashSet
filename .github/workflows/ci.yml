name: CI

on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: 5.0.x

    - name: Build
      run: dotnet build -c Release

    - name: Build tests
      run: dotnet build -c Release
      working-directory: ./FastHashSetTestsExtra

    - name: Test
      run: dotnet test -c Release --no-build
      working-directory: ./FastHashSetTestsExtra

    - name: '[Ubuntu] Set version to -ci-${{ github.run_number }}'
      if: matrix.os == 'ubuntu-latest'
      shell: pwsh
      run: |
        $input_path = "./${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj"
        $regex = "(?<=<Version>).*(?=</Version>)"
        (Get-Content $input_path) -Replace $regex, '$0-ci-${{ github.run_number }}' | Out-File $input_path

    - name: '[Ubuntu] Pack'
      if: matrix.os == 'ubuntu-latest'
      run: |
        dotnet pack -c Release --no-build ./${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj --include-symbols -o ${{ env.ARTIFACT_DIR }}

    - name: '[Ubuntu] Upload Artifact'
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PROJECT_NAME }}-ci-${{ github.run_number }}
        path: |
          ${{ env.ARTIFACT_DIR }}/*.nupkg
          ${{ env.ARTIFACT_DIR }}/*.snupkg
        if-no-files-found: error

  benchmark:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: 5.0.x

    - name: Build
      run: dotnet build -c Release

    - name: Run All_Days_Benchmark
      run: dotnet run -c Release --no-build
      working-directory: ./HashSetBench

    - name: 'Upload ${{ matrix.os }} artifacts'
      continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: artifacts-${{ matrix.os }}-${{ github.run_number }}
        path: ./HashSetBench/BenchmarkDotNet.Artifacts/results/
        if-no-files-found: error
